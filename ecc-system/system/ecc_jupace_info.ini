[GENERAL]
type = "Computer"

name = "Jupiter Ace"
manufacturer = "Jupiter Cantab"

year_start = "1982"
year_end = "1984"

description = "
The Jupiter Ace was a British home computer of the early 1980s, produced by a company, set up for the purpose, named Jupiter Cantab. The Ace differed  from other microcomputers of the time in that it used FORTH instead of the traditional BASIC.

FORTH systems combine high performance and code compactness  with the programming benefits of high-level programming languages . The designers had the courage to deliver  FORTH's many advantages to the public, education and industry.


Intro

It was named after the early British computer, the ACE. The name choice hides several references:

An introductory home computer that avoided BASIC programming - It was a first. 
Having an high level programing language and high performance - It was an ace. 
Instead of interpreted BASIC it used FORTH, a Threaded code programming language that also acted as Operating System.
In the ACE, the FORTH language, and system,was adapted to the disk-less tape-using home computer hardware.


The Jupiter ACE was this FORTH dialect inside a simple and efficient hardware.

On average, and for similar programs, ACE's FORTH was 5 times faster and needing half the RAM (RAM was an expensive luxury at the time).

ACE's FORTH made it a very fast microcomputer and simultaneously one that promoted both well structured code and modular programming.
It grabbed the attention of the community.


Design

The company, Jupiter Cantab, was formed by Richard Altwasser and Steven Vickers. 

Both had been on the design team for the Sinclair ZX Spectrum:

Altwasser did some work on the development of the ZX-81 and in the design of the hardware of the Spectrum. 
Vickers adapted and expanded the 4K ZX-80 ROM to the 8K ZX-81 ROM and wrote most of the ROM for the Spectrum. 
A promising association, with high hopes but limited in money and time. So the ACE born conditioned by those limits.

A completely new, clean and well engineered board kept it economical. 
The FORTH usage and clever adaptation made it a good and usable tool for learning, programming and control. 


Specifications

CPU : Zilog Z80 processor clocked at 3.25 MHz. 
RAM : 1 KB, expandable up to 49 KB. 
Video : Independent sub-system using dedicated 2 banks of 1 KB making a total of 2 KB of extra VRAM. 
Sound : Internal Speaker. 
Keyboard : was the same type used in the Spectrum, but avoiding single-keyword entry (due to the extensible nature of the residing Forth language). 
Expansion : 2 connectors: One (standard, CPU related) similar to the one in the ZX-81. The other (extra) connecting to the Video sub-system. 
The ACE RAM is usually referenced including the 2 KB Video banks of VRAM (like the Sinclair computers did), leading to some confusion.

Clarification notes on the subject:

In computers the ACE is compared, their actual user RAM available is less than the total declared as they share it with Video usage. 
Their BASIC RAM demands are greater than those of FORTH. RAM amounts are not equivalent, but relative though in a non-direct way: 
Forth programs usage tends to be be more RAM efficient the bigger programs are as they reuse previous defined code. 


System
 
A small Jupiter ACE systemThe Jupiter ACE is usually compared with ZX81 due to its looks, though in a white box, B/W display and limited RAM. It is also wrongly classified as a Sinclair derivative or clone when is actually an independent computer:

Having a completely new and clean architecture, similarities are limited to the outside box, keyboard or limited RAM:

The ZX81 used 75 percent of its Z80 [[CPU Time] to drive the video. In ACE the Z80 CPU was fully used. 
The Spectrum, like preceding Sinclair Research computers, use available RAM both to programming but also video. 
The ACE used a Dedicated Video Circuit with its own 2 KB maximizing the role of the CPU. Thus the declared RAM total of 3KB. 
The use of discrete transistor-transistor logic rather than the ULA Sinclair machines (after the ZX-80). 
The Jupiter-ACE was new in the market. So it couldn't afford the use of an ULA (only highly economical in high quantities) used by other computers to be more price competitive. Even so, its clever design needed a low number of chips allowing it to be a choice to consider.

Like the Spectrum, it used black rubber keys. Likewise, both audio capabilities were CPU controlled with programmable frequency and duration. Also shared sound output through a small built-in speaker.

It also used a television as a display output, but in B&W only.

Programs and data storage was by means of a common cassette tape, as was standard at that time.


Hardware
 
Clean and economical on chips, it was designed from scratch to be efficient. (Not a Sinclair derivative). 

Video :

One 1K bank allowed redefinition of most of its 128 characters ASCII based characters in 8x8 pixel bitmap format. 
The other 1K bank stored the full screen display of 24 rows x 32 columns of characters in black and white. 
So while it had only one video mode, text only (each char being a 8x8 defined sprite) graphics could be used:

Chunky graphics with a low resolution of 64x48, usually used for plotting or drawing. 
Emulation of High resolution (256x192) graphics, limited by the 128 available (definable) 8x8 chars. 
These 2 kinds of graphics could be mixed together and with text. 
The font of the character set was identical to that of the Spectrum, but the display was white on black instead of color. Although a color graphics board was designed  none was ever commercialized.

Sound
Internal speaker directly controlled by the CPU in single task mode, with control of sound frequency an its duration in milliseconds. 

External Storage :
Cassette tape interface at 1500 baud. 

Add-Ons :
Originally developed to receive ZX-81 add-ons, with a compatible expansion slot, it was actually delivered in a different configuration. A simple rewiring adapter could be used, but not very effective due to power losses. Dedicated add-ons were needed and built by external companies, after the initial 16KB by Jupiter Cantab.

RAM
Pack 16KB by Jupiter Cantab. 
Pace 16KB and 32KB by Stonechip Electronics. 
Pack 48KB by Boldfield (new Jupiter ACE owner after Jupiter Cantab). 

Keyboard
Memotech Keyboard, by Memotech. 

Sound
SoundBoard (1983) by Essex Micro Electronics, 

Storage
Jet-Disc Disc Drive System (1983) by MPE (control up to four 3', 5', or 8' drives). 
Drive Disk Controler (1985) by MPE (compatible with most makes of 5.1/4' floppy disc units and some types of 3' drive). 
Printer Adapters 
ADS Centronics Interface Machine (1983), by Advanced Digital Systems,
RS232 & Centronics PrinterCard (1984) by Essex Micro Electronics. 


Firmware
 
ACE's Forth VocabularyThe major visible difference from previous introductory computers, was it avoided BASIC language problems (low speed, non-structured code) by using Forth as its default programming language. On the downside, the usage of a data stack and the associated Reverse Polish notation were as unfamiliar as Structured programming was.

Forth, being a structured language and efficient one (both on speed and RAM usage), was considered more adapted to be used by micro-computers (meaning an affordable but slow CPU and a small size RAM). The new microcomputer was meant to be fast and useful. 
Control Structures could be nested to any deep level, only memory available dependent. 
Forth allowed easier implementation of Machine code routines, if needed for a particular task. 
Used Runtime error Checking by default. This could be turned off to get a further (application dependent) speed improvement of 25 percent to 50 percent. In conjunction with structured code and Modular programming made it a very stable system (an hard to crash computer). 
Also allowed recursive programing, if desired. 
The ACE had an 8 KB ROM containing the O/S, Forth Kernel and the predefined dictionary of Forth words in about 5KB. The remaining 3KB of ROM were used for tape control, Floating numbers library and Character definitions table'ACE ROM Project (E-Book)'. </ref>. Some of the ROM was written in Z80 machine code, but some was also coded in Forth, both maximizing the number of functions available in ROM and also maximizing the RAM space for extensions.

The next 8 KB were splited in 2 blocks of 4KB space:

The Video subsystem access allowing two different priorities by the user to the 2KB VRAM in: Regular or Overriding Video. 
User RAM. But since only 1KB was delivered this resulted in that 1KB echoing on all 4KB space, wrongly interpreted as a multiple access. 
So a 16KB space was used for ROM, VIDEO, and USER. Leaving free a 16KB space for RAM extension plus 32KB space free for all possible usages.


ACE's Forth

ACE's Forth, maybe more correctly named as Jupiter Forth, was based mostly on Forth-79, with some relevant differences:

A few extra Words were named similar to known BASIC sound, video and tape commands, as behavior was the same. 
Lacked less used Forth Words, easy implemented if needed. 
It introduced several innovations, as follows: 
As a Programming Language:

It simplified usual Forth definer and compiler words creation, with the CREATE .. DOES> , creation pair with: 
DEFINER .... DOES> : Create new Defining words, usually used to define and build data data structures,  ( Examples: Arrays, Records, ... ). 
COMPILER .. RUNS> : Create new Compiling words, less frequently used to extend the language with new control structures. ( Examples: Case, Infinite-Loop, ... ). 
As an Operating System:

It was adapted to Tape usage, saving/loading user vocabularies instead of the usual numbered programing blocks used in diskette systems. 
The ACE's Forth could decompile its programs, unlike usual Forth systems: 
This decompiling ability had several advantages as a solution to the absence of the more flexible disk system used by Forth;

It did not store the text of a Forth program, instead it compiled the code after editing and stored it in ready-to-run format. 
While this saved RAM it also saved time in reading and writing programs from cassette tape. 
This tape-friendly and RAM-saving solution was unique to the Jupiter ACE Forth.


Commercial

Though Forth delivered several great advantages over the interpreted BASIC used on all other home computers, the weak box and too small initial RAM kept the sales low in spite of technical interest. Excellent reviews in most magazines grabbed attention and interest on the ACE and its characteristics. 


Models
 
Jupiter ACE 40001982 - Original Jupiter ACE on an yogurt-pot type of case - Reported 8000 units built.
1983 - Jupiter ACE 4000 on stronger injection moulded case - Reported 800 units built.


Sales

Sales of the machine were never very large; as of the early 2000s, surviving machines are quite uncommon, fetching quite high prices as collector's items. One main reason, for this low commercial results, seems to have been the need to buy an extra 16KB RAM-extension which almost doubled the ACE's price. It happened that the designed 4 KB of base RAM was not built in favor of the less expensive 1 KB delivered.

Industry and Education did not respond, apparently for another reason: The weak case, later replaced in the new ACE4000 model. As for the public, the absence of color kept the ACE squarely in a niche market of programming enthusiasts.

It must be understood that with ACE's Forth, 1 KB was equivalent to 2 KB (on average) in Sinclair computers, used here as reference.
It was a real limit nonetheless. Notice that an initial 4 KB (in design) would be the equivalent of about 8 KB in Sinclair BASIC. With the designed 4 KB, though the final price would be slightly more expensive, the ACE would have been much more useful and attractive starting right from the base model.


Education

Its full discrete logic construction makes this home computer an excellent choice to clone  for digital electronics, programming learning and small languages study. Any of these isolated or integrated with the others.

An added advantage for educators is that Forth is an High level language but still very close to the hardware.
Its design blueprints are available for study and construction, as is its ROM file and code.

Today, for all the above, the ACE keeps being an excellent education tool (as it was originally intended).

infos from: Wikipedia
"
[RESOURCES]
web = "
"
