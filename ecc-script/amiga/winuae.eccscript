; Platform              : Commodore Amiga
; Script for            : WinUAE (tested with v1.4.4)
; Script version        : v1.0.1.0
; Last changed          : 2016.08.13
;
; Author:  - Sebastiaan Ebeltjes (Phoenix Interactive)
;          - TheCyberDruid
;
; NOTES:
;
; NONE YET!
;
; ==============================================================================
; You need to implent this block in every script, this changes the workfolder to
; the folder where this script is executed, and loads the 'eccScriptSystem' script.
FileChangeDir(@ScriptDir)
#include "..\eccScriptSystem.au3"
; ==============================================================================

; ------------------------------------------------------------------------------
; BEGIN OF SCRIPT
; ------------------------------------------------------------------------------

; GAMEBASE/GEMUS ADD-ON - Autoconfig loader
; Check if there is META info avaiable to search for in the database, if yes, then continue script...
If $eccMetaName <> "" Then

	; First check for underscores, when found stop there to get the name.
        ; example: 'Name_Disk1', will be 'Name'.
	Dim $eccAmigaMetaName
	Dim $LineLocation

	; First give the $eccAmigaMetaName variable the full name
	$eccAmigaMetaName = $eccMetaName

	; Check for underscores in the META name ($eccMetaName)
	While $LineLocation <> StringLen($eccMetaName)

		If @error = -1 Then ExitLoop

			$LineLocation = $LineLocation + 1

			; The name has got a _ (underscore)
			If StringMid($eccMetaName, $LineLocation, 1) = "_" Then

				; Give the $eccAmigaMetaName variable the new 'underscore free' name.
				$eccAmigaMetaName = StringMid($eccMetaName, 1, $LineLocation - 1)

			EndIf

	Wend

	; First check if there already is an AMIGA config for this game, if not then run the routine.
	If FileExists($eccScriptParamsFile) = 0 Then

	Local $oRS
	Local $oConn

	; Open the "GameBase Amiga.mdb" database file for input.
	$oConn = ObjCreate("ADODB.Connection")
	$oRS = ObjCreate("ADODB.Recordset")
	$oConn.Open("Driver={Microsoft Access Driver (*.mdb)};Dbq=" & $eccSystemEccFolder & "\ecc-system\datfile\GameBase Amiga.mdb")

	; Open/Goto the "Games" database.
	$oRS.Open("Select * FROM Games", $oConn, 1, 3)

	; Display tooltip to let user know a scan is being executed.
	ToolTip("Scanning " & $oRS.RecordCount & " GBA DB configrecords for '" & $eccAmigaMetaName & "'", @DesktopWidth/2, @DesktopHeight/2, "GetGemusConfig", 1, 6)

	$oRS.MoveFirst
	For $iIndex = 1 To $oRS.RecordCount

		; Search the "Name" column for the Romname.
		If $oRS.Fields("Name").value = $eccAmigaMetaName Then

			;Show config window
			$Form1 = GUICreate("Found configuration!", 267, 453, 193, 125)
			$EditConfig = GUICtrlCreateEdit("", 8, 48, 249, 361)
			GUICtrlSetData(-1, $oRS.Fields("Gemus").value)
			$ButtonCancel = GUICtrlCreateButton("CANCEL", 8, 416, 113, 33, 0)
			$ButtonOk = GUICtrlCreateButton("OK, USE THIS", 128, 416, 129, 33, 0)
			$Label1 = GUICtrlCreateLabel("Found a config script for '" & $eccAmigaMetaName & "', you can tweak it here before saving it!", 8, 8, 252, 33)
			GUISetState(@SW_SHOW)

			While 1
			$msg = GuiGetMsg()
			Select

				Case $Msg = -3
				ExitLoop

				Case $Msg = $ButtonCancel
				ExitLoop

				Case $Msg = $ButtonOk
				; Open the amiga game INI file to write the content to.
				$AmigaConfigFile = FileOpen($eccScriptParamsFile, 10)
				FileWrite($AmigaConfigFile, GUICtrlRead($EditConfig,0))
				FileClose($AmigaConfigFile)
				ExitLoop

			EndSelect
			WEnd

			; Exit the loop
			$iIndex = $oRS.RecordCount
		EndIf

		; Goto the next row of the "Name" column.
		$oRS.MoveNext
	Next

	; Close connection with the database.
	$oConn.Close
	$oConn = 0
	EndIf

	ToolTip("") ; Remove Tooltip

Else
	; Display tooltip to let user know there is now META data.
	ToolTip("There is no META data inserted, skipping GBA DB scan...", @DesktopWidth/2, @DesktopHeight/2, "GetGemusConfig", 1, 6)
	Sleep(1000)
	ToolTip("") ; Remove Tooltip
EndIf


; Generate an UAE file for this game.
; Also overwrites the old content with new content.

; First let's copy the WINAUE TEMPLATE INI to the UAE ROM NAME
$sUAEFilename = $eccFileRomPath & $eccFileRomNamePlain & ".uae"
FileCopy(@Scriptdir & "\winuae-template.ini", $sUAEFilename, 9)

$iDiskCount = 1
Dim $aDiskNames[5]
If IsArray($eccMultiRoms) Then
	$iRomCount = UBound($eccMultiRoms, 1) - 1
	For $i = 1 To $iRomCount
		If $eccMultiRoms[$i][1] <> '""' Then
			If Not StringInStr($eccMultiRoms[$i][0], "packed") Then
				If StringInStr($eccMultiRoms[$i][1], "\") Then
					$sRomName = CleanRomName($eccMultiRoms[$i][1])
				Else
					$sRomName = $eccMultiRoms[$i][1]
				EndIf
				If Not FileExists($eccFileRomPath & $sRomName) Then
					$sRomName = StringReplace($sRomName, ".adf", ".zip")
				EndIf
				$sRomName = StringReplace($sRomName, '"', '')
				$aDiskNames[$iDiskCount] = $sRomName
				$iDiskCount += 1
				If $iDiskCount == 5 Then
					ExitLoop
				EndIf
			EndIf
		Else
			ExitLoop
		EndIf
	Next
	$iDiskCount -= 1
Else
	$aDiskNames[1] = StringReplace($eccFileRomFile, '"', '')
Endif

$bConfigChange = False
Dim $aRomSettings[100]
$iSettingsCount = 1

If FileExists($eccScriptParamsFile) Then
	$bGoOn = True

	$fileRomSettings = FileOpen($eccScriptParamsFile, 0)
	While $bGoOn
		$sLine = FileReadLine($fileRomSettings)
		If @error == -1 Then
			$bGoOn = False
		Else
			$aRomSettings[$iSettingsCount] = $sLine
			$iSettingsCount += 1
		EndIf
	WEnd
	FileClose($fileRomSettings)
	ReDim $aRomSettings[$iSettingsCount]
	$iSettingsCount -= 1
	$bConfigChange = True
EndIf

; Now open the UAE file and write the ROM contents into it!
If $bConfigChange Then
	Dim $aUAELines[100]
	$iLineCount = 1
	$bGoOn = True

	$uae_file = FileOpen($sUAEFilename, 0)
	While $bGoOn
		$sLine = FileReadLine($uae_file)
		If @error == -1 Then
			$bGoOn = False
		Else
			$aUAELines[$iLineCount] = $sLine
			$iLineCount += 1
		EndIf
	WEnd
	FileClose($uae_file)
	ReDim $aUAELines[$iLineCount]
	$iLineCount -= 1

	$uae_file = FileOpen($sUAEFilename, 2)
	For $i = 1 To $iLineCount
		$iPos = StringInStr($aUAELines[$i], "=")
		$sCheck = StringLeft($aUAELines[$i], $iPos)
		For $j = 1 To $iSettingsCount
			$iPos = StringInStr($aRomSettings[$j], "=")
			$sSetting = StringLeft($aRomSettings[$j], $iPos)
			If $sSetting == $sCheck Then
				$aUAELines[$i] = $aRomSettings[$j]
			EndIf
		Next
		FileWriteLine($uae_file, $aUAELines[$i])
	Next
	FileClose($uae_file)
EndIf

$uae_file = FileOpen($sUAEFilename, 1)

FileWriteLine($uae_file, "floppy0=" & $eccFileRomPath & $aDiskNames[1])
If $iDiskCount > 1 Then FileWriteLine($uae_file, "floppy1=" & $eccFileRomPath & $aDiskNames[2])
If $iDiskCount > 2 Then FileWriteLine($uae_file, "floppy2=" & $eccFileRomPath & $aDiskNames[3])
If $iDiskCount > 3 Then FileWriteLine($uae_file, "floppy3=" & $eccFileRomPath & $aDiskNames[4])

FileClose($uae_file)

; Start the emulator
Run($Emulator & " " & "-f " & chr(34) & $eccFileRomPath & $eccFileRomNamePlain & ".uae" & chr(34))

Func CleanRomName($sRomName)
	While StringInStr($sRomName, "\")
		$iPos = StringInStr($sRomName, "\") + 1
		$sRomName = StringMid($sRomName, $iPos)
	Wend
	Return StringReplace($sRomName, '"', "")
EndFunc
; ------------------------------------------------------------------------------
; END OF SCRIPT
; ------------------------------------------------------------------------------
Exit